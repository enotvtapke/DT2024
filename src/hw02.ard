\import Data.Bool
\import Data.List
\import Data.Or
\import Function.Meta
\import Logic
\import hw01 (fac)
-- 1. Определите полиморфный tail для списков.

\func tail { A : \Type } (_ : List A): List A
  | nil => nil
  | a :: xs => xs

-- 2. Реализуйте любой (but choose wisely) алгоритм сортировки. Функцию сравнения можно принимать в качестве аргумента.

\func sort { A : \Type } (> : A -> A -> Bool) (a : List A): List A \elim a
  | nil => nil
  | p :: xs => lesser p xs ++ p :: nil ++ greater p xs
  \where {
    \func lesser (p : A) (a : List A): List A \elim a
      | nil => nil
      | x :: xs => if (not (> x p)) (x :: lesser p xs) (lesser p xs)

    \func greater (p : A) (a : List A): List A \elim a
      | nil => nil
      | x :: xs => if (> x p) (x :: greater p xs) (greater p xs)
  }

-- 3. Докажите ассоциативность && и ||.

\func &&-assoc (x y z : Bool) : (x and y) and z = x and (y and z) \elim x
  | false => idp
  | true => idp

\func ||-assoc (x y z : Bool) : (x or y) or z = x or (y or z) \elim x
  | false => idp
  | true => idp

-- 4. Докажите, что fac 3 равно 6.

\func facEq : fac 3 = 6 => idp

-- 5. Докажите следующие пропозициональные тавтологии (choose 2 out of 3).

-- t1 : (P and Q -> R) -> P -> Q -> R
\func t1 {P Q R : \Type} (f : \Sigma P Q -> R) (p : P) (q : Q) : R => f (p, q)

-- t2 : (P -> R) -> (Q -> R) -> P or Q -> R
\func t2 {P Q R : \Type} (f : P -> R) (g : Q -> R) (h : Or P Q) : R \elim h
  | inl p => f p
  | inr q => g q

-- t3 : ((P -> Q -> R) -> P) -> (P -> R) -> R
\func t3 {P Q R : \Type} (f : (P -> Q -> R) -> P) (g : P -> R) : R => g $ f \lam p _ => g p

-- 6. Сформулируйте и докажите следующие пропозициональные тавтологии (choose 2 out of 3).

-- t4 : (P -> Q -> R) -> P and Q -> R
-- t5 : (P or Q -> P and Q) -> (P -> Q) and (Q -> P)
-- t6 : ((((P -> Q) -> P) -> P) -> Q) -> Q

\func t4 {P Q R : \Type} (f : P -> Q -> R) (g : \Sigma P Q) : R => f g.1 g.2

\func t5 {P Q : \Type} (f : Or P Q -> \Sigma P Q) : \Sigma (P -> Q) (Q -> P) => (
  \lam p => (f (inl p)).2,
  \lam q => (f (inr q)).1
)

\func t6 {P Q : \Type} (f : (((P -> Q) -> P) -> P) -> Q) : Q => f \lam f1 => f1 (\lam f2 => f \lam _ => f2)

-- 7. Докажите следующие утверждения.

-- s1 : Если для любого x : Nat верно P(x), то существует x : Nat для которого P(x) верно.
\func s1 (P : Nat -> \Type) (h : \Pi (x : Nat) -> P x) : \Sigma (x : Nat) (P x) => (1, h 1)

-- s2 : Если не существует x : Nat такого, что верно P(x), то P(3) не верно.
\func s2 (P : Nat -> \Type) (h : \Sigma (x : Nat) (P x) -> Empty) : P 3 -> Empty => \lam x => h (3, x)

-- 8. Сформулируйте и докажите следующие утверждения.

-- s3 : Если для всех x : Nat верно, что P(x) влечет Q(x), и существует x : Nat для которого верно P(x), то существует x : Nat для которого верно Q(x).
\func s3 (P Q : Nat -> \Type) (h : \Pi (x : Nat) -> P x -> Q x) (g : \Sigma (x : Nat) (P x)) : \Sigma (x : Nat) (Q x) => (g.1, h g.1 g.2)

-- s4 : Если для всех x : Nat либо не верно P(x), либо не верно Q(x), то P(3) влечет, что Q(3) не верно.
\func s4 (P Q : Nat -> \Type) (h : \Pi (x : Nat) -> Or (P x -> Empty) (Q x -> Empty)) : P 3 -> Q 3 -> Empty =>
  \lam p q => \case h 3 \with {
    | inl a => a p
    | inr b => b q
  }
